{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ExistenceFilter =\n/** @class */\nfunction () {\n  // TODO(b/33078163): just use simplest form of existence filter for now\n  function ExistenceFilter(count) {\n    this.count = count;\n  }\n\n  ExistenceFilter.prototype.equals = function (other) {\n    return other && other.count === this.count;\n  };\n\n  return ExistenceFilter;\n}();\n\nexport { ExistenceFilter };","map":{"version":3,"sources":["../src/remote/existence_filter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,IAAA,eAAA;AAAA;AAAA,YAAA;AACE;AACA,WAAA,eAAA,CAAmB,KAAnB,EAAgC;AAAb,SAAA,KAAA,GAAA,KAAA;AAAiB;;AAE7B,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAAoC;AAClC,WAAO,KAAK,IAAI,KAAK,CAAC,KAAN,KAAgB,KAAK,KAArC;AACD,GAFM;;AAGT,SAAA,eAAA;AAAC,CAPD,EAAA","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ExistenceFilter {\n  // TODO(b/33078163): just use simplest form of existence filter for now\n  constructor(public count: number) {}\n\n  public equals(other: ExistenceFilter) {\n    return other && other.count === this.count;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}