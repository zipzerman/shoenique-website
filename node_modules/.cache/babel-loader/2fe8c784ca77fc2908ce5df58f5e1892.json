{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./constants\");\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\n\n\nexports.getUA = function () {\n  if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\n\n\nexports.isMobileCordova = function () {\n  return typeof window !== 'undefined' && !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA());\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\n\n\nexports.isReactNative = function () {\n  return typeof navigator === 'object' && navigator['product'] === 'ReactNative';\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\n\n\nexports.isNodeSdk = function () {\n  return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;\n};","map":{"version":3,"sources":["../src/environment.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAEH,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA;;;AAGG;;;AACU,OAAA,CAAA,KAAA,GAAQ,YAAA;AACnB,MACE,OAAO,SAAP,KAAqB,WAArB,IACA,OAAO,SAAS,CAAC,WAAD,CAAhB,KAAkC,QAFpC,EAGE;AACA,WAAO,SAAS,CAAC,WAAD,CAAhB;AACD,GALD,MAKO;AACL,WAAO,EAAP;AACD;AACF,CATY;AAWb;;;;;;;AAOG;;;AACU,OAAA,CAAA,eAAA,GAAkB,YAAA;AAC7B,SACE,OAAO,MAAP,KAAkB,WAAlB,IACA,CAAC,EAAE,MAAM,CAAC,SAAD,CAAN,IAAqB,MAAM,CAAC,UAAD,CAA3B,IAA2C,MAAM,CAAC,UAAD,CAAnD,CADD,IAEA,oDAAoD,IAApD,CAAyD,OAAA,CAAA,KAAA,EAAzD,CAHF;AAKD,CANY;AAQb;;;;AAIG;;;AACU,OAAA,CAAA,aAAA,GAAgB,YAAA;AAC3B,SACE,OAAO,SAAP,KAAqB,QAArB,IAAiC,SAAS,CAAC,SAAD,CAAT,KAAyB,aAD5D;AAGD,CAJY;AAMb;;;;AAIG;;;AACU,OAAA,CAAA,SAAA,GAAY,YAAA;AACvB,SAAO,WAAA,CAAA,SAAA,CAAU,WAAV,KAA0B,IAA1B,IAAkC,WAAA,CAAA,SAAA,CAAU,UAAV,KAAyB,IAAlE;AACD,CAFY","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexport const getUA = function() {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n};\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexport const isMobileCordova = function() {\n  return (\n    typeof window !== 'undefined' &&\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n};\n\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexport const isReactNative = function() {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n};\n\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexport const isNodeSdk = function() {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n};\n"]},"metadata":{},"sourceType":"script"}