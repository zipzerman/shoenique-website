{"ast":null,"code":"(function (root) {\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {} // Polyfill for Function.prototype.bind\n\n\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n\n      return;\n    }\n\n    self._handled = true;\n\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n\n      var ret;\n\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function () {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n\n\n  function doResolve(fn, self) {\n    var done = false;\n\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new this.constructor(noop);\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n\n          args[i] = val;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  }; // Use polyfill for setImmediate for performance gains\n\n\n  Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {\n    setImmediate(fn);\n  } || function (fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n\n\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n\n\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n})(this);","map":{"version":3,"sources":["C:/Users/junecsnp/Desktop/JuneWeb+Shoe/node_modules/promise-polyfill/promise.js"],"names":["root","setTimeoutFunc","setTimeout","noop","bind","fn","thisArg","apply","arguments","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","push","_immediateFn","cb","onFulfilled","onRejected","resolve","reject","promise","ret","e","newValue","then","finale","length","_unhandledRejectionFn","i","len","Handler","done","value","reason","ex","prototype","prom","constructor","all","arr","args","Array","slice","call","remaining","res","val","race","values","setImmediate","err","console","warn","_setImmediateFn","_setUnhandledRejectionFn","module","exports"],"mappings":"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","sourcesContent":["(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n"]},"metadata":{},"sourceType":"script"}