{"ast":null,"code":"import firebase from '@firebase/app';\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain and scheme for API calls.\r\n */\n\nvar domainBase = 'https://firebasestorage.googleapis.com';\n/**\r\n * Domain and scheme for object downloads.\r\n */\n\nvar downloadBase = 'https://firebasestorage.googleapis.com';\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\n\nvar apiBaseUrl = '/v0';\n/**\r\n * Base URL for upload calls to the API.\r\n */\n\nvar apiUploadBaseUrl = '/v0';\nvar configOption = 'storageBucket';\n/**\r\n * 2 minutes\r\n */\n\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n */\n\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\n\nvar minSafeInteger = -9007199254740991;\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function get() {\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function get() {\n      return this.code_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function get() {\n      return this.message_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function get() {\n      return this.serverResponse_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, opt_contentType) {\n    this.data = data;\n    this.contentType = opt_contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, string) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(string));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, string));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(string), dataURLContentType_(string));\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(string) {\n  var b = [];\n\n  for (var i = 0; i < string.length; i++) {\n    var c = string.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) == 55296) {\n          // The start of a surrogate pair.\n          var valid = i < string.length - 1 && (string.charCodeAt(i + 1) & 64512) == 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = string.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) == 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(string) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(string);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, string) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = string.indexOf('-') !== -1;\n        var hasUnder = string.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = string.indexOf('+') !== -1;\n        var hasSlash = string.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        string = string.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(string);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(string) {\n  var parts = new DataURLParts(string);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(string) {\n  var parts = new DataURLParts(string);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\n\n\nfunction contains(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction forEach(obj, f) {\n  for (var key in obj) {\n    if (contains(obj, key)) {\n      f(key, obj[key]);\n    }\n  }\n}\n\nfunction clone(obj) {\n  if (obj == null) {\n    return {};\n  }\n\n  var c = {};\n  forEach(obj, function (key, val) {\n    c[key] = val;\n  });\n  return c;\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\n\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\n\n\nfunction make(resolver) {\n  return new Promise(resolver);\n}\n/**\r\n * @template T\r\n */\n\n\nfunction resolve(value) {\n  return Promise.resolve(value);\n}\n\nfunction reject(error) {\n  return Promise.reject(error);\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = make(function (resolve$$1, reject$$1) {\n      _this.xhr_.addEventListener('abort', function (event) {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve$$1(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function (event) {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve$$1(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function (event) {\n        resolve$$1(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\n    var _this = this;\n\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(opt_headers)) {\n      var headers = opt_headers;\n      forEach(headers, function (key, val) {\n        _this.xhr_.setRequestHeader(key, val.toString());\n      });\n    }\n\n    if (isDef(opt_body)) {\n      this.xhr_.send(opt_body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var path = '(/([^?#]*).*)?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' + version + '/b/' + bucketDomain + '/o' + path, 'i');\n    var httpIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: httpRegex,\n      indices: httpIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length == 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeNormalUrl(urlPart) {\n  return domainBase + apiBaseUrl + urlPart;\n}\n\nfunction makeDownloadUrl(urlPart) {\n  return downloadBase + apiBaseUrl + urlPart;\n}\n\nfunction makeUploadUrl(urlPart) {\n  return domainBase + apiUploadBaseUrl + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  forEach(params, function (key, val) {\n    var nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  }); // Chop off the extra '&' or '?' on the end\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, opt_local, opt_writable, opt_xform) {\n    this.server = server;\n    this.local = opt_local || server;\n    this.writable = !!opt_writable;\n    this.xform = opt_xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  var valid = isString(fullPath);\n\n  if (!valid || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    fullPath = fullPath;\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(metadata, size) {\n    if (isDef(size)) {\n      return +size;\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  /**\r\n   * Transforms a comma-separated string of tokens into a list of download\r\n   * URLs.\r\n   */\n\n  function xformTokens(metadata, tokens) {\n    var valid = isString(tokens) && tokens.length > 0;\n\n    if (!valid) {\n      // This can happen if objects are uploaded through GCS and retrieved\n      // through list, so we don't want to throw an Error.\n      return [];\n    }\n\n    var encode = encodeURIComponent;\n    var tokensList = tokens.split(',');\n    var urls = tokensList.map(function (token) {\n      var bucket = metadata['bucket'];\n      var path = metadata['fullPath'];\n      var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n      var base = makeDownloadUrl(urlPart);\n      var queryString = makeQueryString({\n        alt: 'media',\n        token: token\n      });\n      return base + queryString;\n    });\n    return urls;\n  }\n\n  mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, authWrapper) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(authWrapper, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  var validType = p && isObject(p);\n\n  if (!validType) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    var val = p[key];\n\n    if (key === 'customMetadata') {\n      if (!isObject(val)) {\n        throw 'Expected object for \\'customMetadata\\' mapping.';\n      }\n    } else {\n      if (isNonNullObject(val)) {\n        throw \"Mapping for '\" + key + \"' cannot be an object.\";\n      }\n    }\n  }\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, opt_optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!opt_optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(opt_validator, opt_optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var validator;\n\n  if (opt_validator) {\n    validator = and_(stringValidator, opt_validator);\n  } else {\n    validator = stringValidator;\n  }\n\n  return new ArgSpec(validator, opt_optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(opt_optional) {\n  return new ArgSpec(metadataValidator, opt_optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(opt_validator, opt_optional) {\n  function validator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (opt_validator !== undefined && opt_validator !== null) {\n      opt_validator(p);\n    }\n  }\n\n  return new ArgSpec(validator, opt_optional);\n}\n\nfunction nullFunctionSpec(opt_optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, opt_optional);\n}\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < var_args.length; i++) {\n      bb.append(var_args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(var_args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, opt_elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (opt_elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (opt_elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var var_args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = var_args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = var_args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\n\n\nfunction contains$1(array, elem) {\n  return array.indexOf(elem) !== -1;\n}\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\n\n\nfunction clone$1(arraylike) {\n  return Array.prototype.slice.call(arraylike);\n}\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\n\n\nfunction remove(array, elem) {\n  var i = array.indexOf(elem);\n\n  if (i !== -1) {\n    array.splice(i, 1);\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeNormalUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeNormalUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(authWrapper, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeNormalUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(xhr, text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, opt_metadata) {\n  var metadata = clone(opt_metadata);\n  metadata['fullPath'] = location.path;\n  metadata['size'] = blob.size();\n\n  if (!metadata['contentType']) {\n    metadata['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadata;\n}\n\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata = metadataForUpload_(location, blob, opt_metadata);\n  var metadataString = toResourceString(metadata, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata['fullPath']\n  };\n  var url = makeUploadUrl(urlPart);\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, opt_allowed) {\n  var status;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowed = opt_allowed || ['active'];\n  handlerCheck(contains$1(allowed, status));\n  return status;\n}\n\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadata = metadataForUpload_(location, blob, opt_metadata);\n  var urlParams = {\n    name: metadata['fullPath']\n  };\n  var url = makeUploadUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadata, mappings);\n  var timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr, text) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr, text) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    var size = parseInt(sizeString, 10);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status = new ResumableUploadStatus(0, 0);\n\n  if (opt_status) {\n    status.current = opt_status.current;\n    status.total = opt_status.total;\n  } else {\n    status.current = 0;\n    status.total = blob.size();\n  }\n\n  if (blob.size() !== status.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status.total - status.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = opt_progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, opt_error, opt_complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(opt_error) || isDef(opt_complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n    get: function get() {\n      if (this.metadata !== null) {\n        var urls = this.metadata['downloadURLs'];\n\n        if (urls != null && urls[0] != null) {\n          return urls[0];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return UploadTaskSnapshot;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    }\n\n    resolve(true).then(function () {\n      f.apply(null, argsToForward);\n    });\n  };\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    var _this = this;\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = make(function (resolve$$1, reject$$1) {\n      _this.resolve_ = resolve$$1;\n      _this.reject_ = reject$$1;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded, total) {\n      _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this;\n\n    this.authWrapper_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n\n        default:\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    if (nextOrObserver === void 0) {\n      nextOrObserver = undefined;\n    }\n\n    if (error === void 0) {\n      error = undefined;\n    }\n\n    if (completed === void 0) {\n      completed = undefined;\n    }\n\n    function typeValidator(_p) {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator;\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, opt_complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    remove(this.observers_, observer);\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = clone$1(this.observers_);\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next !== null) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete !== null) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error !== null) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error !== null) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(authWrapper, location) {\n    this.authWrapper = authWrapper;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (authWrapper, location) {\n    return new Reference(authWrapper, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function get() {\n      return this.location.bucket;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function get() {\n      return this.location.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function get() {\n      return lastComponent(this.location.path);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function get() {\n      return this.authWrapper.service();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param string The string to upload.\r\n   * @param opt_format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (string, format, opt_metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, string);\n    var metadata = clone(opt_metadata);\n\n    if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\n      metadata['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(self.authWrapper, self.location);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.getMetadata().then(function (metadata) {\n      var url = metadata['downloadURLs'][0];\n\n      if (isDef(url)) {\n        return url;\n      } else {\n        throw noDownloadURL();\n      }\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (appDelete) {\n    if (appDelete === void 0) {\n      appDelete = false;\n    }\n  };\n\n  return FailRequest;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map_ = {};\n    this.id_ = minSafeInteger;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   * @param r The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (r) {\n    var id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    var self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n\n    r.getPromise().then(unmap, unmap);\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    forEach(this.map_, function (key, val) {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  };\n\n  return RequestMap;\n}();\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\n\n\nvar AuthWrapper =\n/** @class */\nfunction () {\n  function AuthWrapper(app, maker, requestMaker, service, pool) {\n    this.bucket_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n\n    if (this.app_ !== null) {\n      var options = this.app_.options;\n\n      if (isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\n    this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\n    this.requestMap_ = new RequestMap();\n  }\n\n  AuthWrapper.extractBucket_ = function (config) {\n    var bucketString = config[configOption] || null;\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    var loc = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  };\n\n  AuthWrapper.prototype.getAuthToken = function () {\n    // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n    // (b/28673818).\n    if (this.app_ !== null && isDef(this.app_.INTERNAL) && isDef(this.app_.INTERNAL.getToken)) {\n      return this.app_.INTERNAL.getToken().then(function (response) {\n        if (response !== null) {\n          return response.accessToken;\n        } else {\n          return null;\n        }\n      }, function (_error) {\n        return null;\n      });\n    } else {\n      return resolve(null);\n    }\n  };\n\n  AuthWrapper.prototype.bucket = function () {\n    if (this.deleted_) {\n      throw appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  };\n  /**\r\n   * The service associated with this auth wrapper. Untyped to avoid circular\r\n   * type dependencies.\r\n   */\n\n\n  AuthWrapper.prototype.service = function () {\n    return this.service_;\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return Actually a firebaseStorage.Reference, typing not allowed\r\n   *     because of circular dependency problems.\r\n   */\n\n\n  AuthWrapper.prototype.makeStorageReference = function (loc) {\n    return this.storageRefMaker_(this, loc);\n  };\n\n  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n    if (!this.deleted_) {\n      var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  AuthWrapper.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  };\n\n  AuthWrapper.prototype.maxUploadRetryTime = function () {\n    return this.maxUploadRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n    this.maxUploadRetryTime_ = time;\n  };\n\n  AuthWrapper.prototype.maxOperationRetryTime = function () {\n    return this.maxOperationRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n    this.maxOperationRetryTime_ = time;\n  };\n\n  return AuthWrapper;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, arguments);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var var_args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      var_args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    var self = this;\n    this.promise_ = make(function (resolve$$1, reject$$1) {\n      self.resolve_ = resolve$$1;\n      self.reject_ = reject$$1;\n      self.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled$$1) {\n      if (canceled$$1) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = contains$1(self.successCodes_, status);\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve$$1 = self.resolve_;\n      var reject$$1 = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve$$1(result);\n          } else {\n            resolve$$1();\n          }\n        } catch (e) {\n          reject$$1(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject$$1(self.errorCallback_(xhr, err));\n          } else {\n            reject$$1(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject$$1(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject$$1(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = contains$1(extraRetryCodes, status);\n    var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!opt_canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = clone(requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this.authWrapper_.maxOperationRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function get() {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return resolve(undefined);\n  };\n\n  return ServiceInternals;\n}();\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(app, unused, opt_url) {\n  return new Service(app, new XhrIoPool(), opt_url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, // Allow multiple storage instances per app.\n  true);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["C:/Users/junecsnp/Desktop/JuneWeb+Shoe/node_modules/@firebase/storage/dist/index.esm.js"],"names":["firebase","domainBase","downloadBase","apiBaseUrl","apiUploadBaseUrl","configOption","defaultMaxOperationRetryTime","defaultMaxUploadRetryTime","minSafeInteger","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","opt_contentType","contentType","dataFromString","string","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","contains","obj","prop","hasOwnProperty","call","forEach","f","key","clone","val","make","resolver","Promise","resolve","value","reject","error","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","resolve$$1","reject$$1","addEventListener","event","ABORT","NETWORK_ERROR","send","method","opt_body","opt_headers","open","headers","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","jsonObjectOrNull","JSON","parse","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","httpRegex","httpIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeNormalUrl","urlPart","makeDownloadUrl","makeUploadUrl","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","opt_local","opt_writable","opt_xform","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","nameMapping","xformSize","size","sizeMapping","xformTokens","tokens","tokensList","urls","map","token","base","queryString","alt","addRef","authWrapper","generateRef","makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","toResourceString","stringify","metadataValidator","validType","validate","specs","passed","minArgs","maxArgs","optional","validLength","validator","Error","ArgSpec","opt_optional","self","and_","v1","v2","stringSpec","opt_validator","stringValidator","uploadDataSpec","ArrayBuffer","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","isLooseObject","undefined","nullFunctionSpec","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","var_args","_i","arguments","bb","append","sliceBlob","blob","start","webkitSlice","mozSlice","FbsBlob","opt_elideCopy","blobType","data_","type","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","apply","uint8Arrays","finalLength_1","merged_1","index_1","uploadData","contains$1","elem","clone$1","arraylike","remove","splice","RequestInfo","handler","timeout","urlParams","body","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","updateMetadata","deleteObject","determineContentType_","metadataForUpload_","opt_metadata","multipartUpload","genBoundary","str","Math","random","boundary","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","opt_allowed","allowed","createResumableUpload","getResumableUploadStatus","sizeString","parseInt","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","opt_status","opt_progressCallback","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","opt_error","opt_complete","asFunctions","next","complete","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","async","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","currentSize","metadataRequest","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","_p","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","finishPromise_","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","newRef","service","put","throwIfRoot_","putString","delete","getDownloadURL","FailRequest","appDelete","RequestMap","map_","id_","addRequest","r","id","unmap","clear","AuthWrapper","app","maker","requestMaker","pool","bucket_","deleted_","app_","options","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","INTERNAL","getToken","response","accessToken","_error","request","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","doTheRequest","backoffCallback","canceled$$1","RequestEndStatus","progressListener","progressEvent","lengthComputable","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","addAuthHeader_","addVersionHeader_","number","SDK_VERSION","Service","authWrapperBucket","internals_","ServiceInternals","test","refFromURL","STORAGE_TYPE","factory","unused","opt_url","registerStorage","instance","namespaceExports","Storage","registerService"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain and scheme for API calls.\r\n */\r\nvar domainBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Domain and scheme for object downloads.\r\n */\r\nvar downloadBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\r\nvar apiBaseUrl = '/v0';\r\n/**\r\n * Base URL for upload calls to the API.\r\n */\r\nvar apiUploadBaseUrl = '/v0';\r\nvar configOption = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n */\r\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n */\r\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar minSafeInteger = -9007199254740991;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, opt_contentType) {\r\n        this.data = data;\r\n        this.contentType = opt_contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, string) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(string));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, string));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(string) {\r\n    var b = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n        var c = string.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) == 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < string.length - 1 &&\r\n                        (string.charCodeAt(i + 1) & 64512) == 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = string.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) == 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(string) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, string) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = string.indexOf('-') !== -1;\r\n            var hasUnder = string.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = string.indexOf('+') !== -1;\r\n            var hasSlash = string.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            string = string.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(string) {\r\n    var parts = new DataURLParts(string);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(string) {\r\n    var parts = new DataURLParts(string);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\r\nfunction contains(obj, prop) {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nfunction forEach(obj, f) {\r\n    for (var key in obj) {\r\n        if (contains(obj, key)) {\r\n            f(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction clone(obj) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var c = {};\r\n    forEach(obj, function (key, val) {\r\n        c[key] = val;\r\n    });\r\n    return c;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\r\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\r\nfunction make(resolver) {\r\n    return new Promise(resolver);\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction resolve(value) {\r\n    return Promise.resolve(value);\r\n}\r\nfunction reject(error) {\r\n    return Promise.reject(error);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.xhr_.addEventListener('abort', function (event) {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function (event) {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function (event) {\r\n                resolve$$1(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\r\n        var _this = this;\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(opt_headers)) {\r\n            var headers = opt_headers;\r\n            forEach(headers, function (key, val) {\r\n                _this.xhr_.setRequestHeader(key, val.toString());\r\n            });\r\n        }\r\n        if (isDef(opt_body)) {\r\n            this.xhr_.send(opt_body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' +\r\n            version +\r\n            '/b/' +\r\n            bucketDomain +\r\n            '/o' +\r\n            path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length == 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) {\r\n        return component.length > 0;\r\n    })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeNormalUrl(urlPart) {\r\n    return domainBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeDownloadUrl(urlPart) {\r\n    return downloadBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeUploadUrl(urlPart) {\r\n    return domainBase + apiUploadBaseUrl + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    forEach(params, function (key, val) {\r\n        var nextPart = encode(key) + '=' + encode(val);\r\n        queryPart = queryPart + nextPart + '&';\r\n    });\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\r\n        this.server = server;\r\n        this.local = opt_local || server;\r\n        this.writable = !!opt_writable;\r\n        this.xform = opt_xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    var valid = isString(fullPath);\r\n    if (!valid || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        fullPath = fullPath;\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(metadata, size) {\r\n        if (isDef(size)) {\r\n            return +size;\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    /**\r\n     * Transforms a comma-separated string of tokens into a list of download\r\n     * URLs.\r\n     */\r\n    function xformTokens(metadata, tokens) {\r\n        var valid = isString(tokens) && tokens.length > 0;\r\n        if (!valid) {\r\n            // This can happen if objects are uploaded through GCS and retrieved\r\n            // through list, so we don't want to throw an Error.\r\n            return [];\r\n        }\r\n        var encode = encodeURIComponent;\r\n        var tokensList = tokens.split(',');\r\n        var urls = tokensList.map(function (token) {\r\n            var bucket = metadata['bucket'];\r\n            var path = metadata['fullPath'];\r\n            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n            var base = makeDownloadUrl(urlPart);\r\n            var queryString = makeQueryString({\r\n                alt: 'media',\r\n                token: token\r\n            });\r\n            return base + queryString;\r\n        });\r\n        return urls;\r\n    }\r\n    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    var validType = p && isObject(p);\r\n    if (!validType) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        var val = p[key];\r\n        if (key === 'customMetadata') {\r\n            if (!isObject(val)) {\r\n                throw 'Expected object for \\'customMetadata\\' mapping.';\r\n            }\r\n        }\r\n        else {\r\n            if (isNonNullObject(val)) {\r\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, opt_optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!opt_optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(opt_validator, opt_optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var validator;\r\n    if (opt_validator) {\r\n        validator = and_(stringValidator, opt_validator);\r\n    }\r\n    else {\r\n        validator = stringValidator;\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(opt_optional) {\r\n    return new ArgSpec(metadataValidator, opt_optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(opt_validator, opt_optional) {\r\n    function validator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (opt_validator !== undefined && opt_validator !== null) {\r\n            opt_validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction nullFunctionSpec(opt_optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\n\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < var_args.length; i++) {\r\n            bb.append(var_args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(var_args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, opt_elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = var_args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = var_args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\r\nfunction contains$1(array, elem) {\r\n    return array.indexOf(elem) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\r\nfunction clone$1(arraylike) {\r\n    return Array.prototype.slice.call(arraylike);\r\n}\r\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\r\nfunction remove(array, elem) {\r\n    var i = array.indexOf(elem);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(xhr, text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, opt_metadata) {\r\n    var metadata = clone(opt_metadata);\r\n    metadata['fullPath'] = location.path;\r\n    metadata['size'] = blob.size();\r\n    if (!metadata['contentType']) {\r\n        metadata['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadata;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var metadataString = toResourceString(metadata, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, opt_allowed) {\r\n    var status;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowed = opt_allowed || ['active'];\r\n    handlerCheck(contains$1(allowed, status));\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadata, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr, text) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr, text) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        var size = parseInt(sizeString, 10);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status = new ResumableUploadStatus(0, 0);\r\n    if (opt_status) {\r\n        status.current = opt_status.current;\r\n        status.total = opt_status.total;\r\n    }\r\n    else {\r\n        status.current = 0;\r\n        status.total = blob.size();\r\n    }\r\n    if (blob.size() !== status.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status.total - status.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = opt_progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, opt_error, opt_complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(opt_error) ||\r\n            isDef(opt_complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = opt_error || null;\r\n            this.complete = opt_complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\r\n        get: function () {\r\n            if (this.metadata !== null) {\r\n                var urls = this.metadata['downloadURLs'];\r\n                if (urls != null && urls[0] != null) {\r\n                    return urls[0];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        resolve(true).then(function () {\r\n            f.apply(null, argsToForward);\r\n        });\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        var _this = this;\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.resolve_ = resolve$$1;\r\n            _this.reject_ = reject$$1;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded, total) {\r\n            _this.updateProgress_(sizeBefore + loaded);\r\n        };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        if (nextOrObserver === void 0) { nextOrObserver = undefined; }\r\n        if (error === void 0) { error = undefined; }\r\n        if (completed === void 0) { completed = undefined; }\r\n        function typeValidator(_p) {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, opt_complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        remove(this.observers_, observer);\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = clone$1(this.observers_);\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next !== null) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete !== null) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (string, format, opt_metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [\r\n            stringSpec(),\r\n            stringSpec(formatValidator, true),\r\n            metadataSpec(true)\r\n        ], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, string);\r\n        var metadata = clone(opt_metadata);\r\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\r\n            metadata['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(self.authWrapper, self.location);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.getMetadata().then(function (metadata) {\r\n            var url = metadata['downloadURLs'][0];\r\n            if (isDef(url)) {\r\n                return url;\r\n            }\r\n            else {\r\n                throw noDownloadURL();\r\n            }\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (appDelete) {\r\n        if (appDelete === void 0) { appDelete = false; }\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map_ = {};\r\n        this.id_ = minSafeInteger;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (r) {\r\n        var id = this.id_;\r\n        this.id_++;\r\n        this.map_[id] = r;\r\n        var self = this;\r\n        function unmap() {\r\n            delete self.map_[id];\r\n        }\r\n        r.getPromise().then(unmap, unmap);\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        forEach(this.map_, function (key, val) {\r\n            if (val) {\r\n                val.cancel(true);\r\n            }\r\n        });\r\n        this.map_ = {};\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\r\n        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[configOption] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function (_error) {\r\n                return null;\r\n            });\r\n        }\r\n        else {\r\n            return resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, arguments);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        var self = this;\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            self.resolve_ = resolve$$1;\r\n            self.reject_ = reject$$1;\r\n            self.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled$$1) {\r\n            if (canceled$$1) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = contains$1(self.successCodes_, status);\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve$$1 = self.resolve_;\r\n            var reject$$1 = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve$$1(result);\r\n                    }\r\n                    else {\r\n                        resolve$$1();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject$$1(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject$$1(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_\r\n                            ? appDeleted()\r\n                            : canceled();\r\n                        reject$$1(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = contains$1(extraRetryCodes, status);\r\n        var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!opt_canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = clone(requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxOperationRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return resolve(undefined);\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, opt_url) {\r\n    return new Service(app, new XhrIoPool(), opt_url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"]},"metadata":{},"sourceType":"module"}