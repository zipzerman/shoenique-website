{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n      var len = o.length >>> 0; // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      } // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n      var thisArg = arguments[1]; // 5. Let k be 0.\n\n      var k = 0; // 6. Repeat, while k < len\n\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        } // e. Increase k by 1.\n\n\n        k++;\n      } // 7. Return undefined.\n\n\n      return undefined;\n    }\n  });\n}","map":{"version":3,"sources":["../src/shims/find.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH;;;;AAIG;AACH,IAAI,CAAC,KAAK,CAAC,SAAN,CAAgB,IAArB,EAA2B;AACzB,EAAA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,MAAvC,EAA+C;AAC7C,IAAA,KAAK,EAAE,eAAS,SAAT,EAAkB;AACvB;AACA,UAAI,QAAQ,IAAZ,EAAkB;AAChB,cAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;AACD;;AAED,UAAI,CAAC,GAAG,MAAM,CAAC,IAAD,CAAd,CANuB,CAQvB;;AACA,UAAI,GAAG,GAAG,CAAC,CAAC,MAAF,KAAa,CAAvB,CATuB,CAWvB;;AACA,UAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACnC,cAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;AACD,OAdsB,CAgBvB;;;AACA,UAAI,OAAO,GAAG,SAAS,CAAC,CAAD,CAAvB,CAjBuB,CAmBvB;;AACA,UAAI,CAAC,GAAG,CAAR,CApBuB,CAsBvB;;AACA,aAAO,CAAC,GAAG,GAAX,EAAgB;AACd;AACA;AACA;AACA;AACA,YAAI,MAAM,GAAG,CAAC,CAAC,CAAD,CAAd;;AACA,YAAI,SAAS,CAAC,IAAV,CAAe,OAAf,EAAwB,MAAxB,EAAgC,CAAhC,EAAmC,CAAnC,CAAJ,EAA2C;AACzC,iBAAO,MAAP;AACD,SARa,CASd;;;AACA,QAAA,CAAC;AACF,OAlCsB,CAoCvB;;;AACA,aAAO,SAAP;AACD;AAvC4C,GAA/C;AAyCD","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}