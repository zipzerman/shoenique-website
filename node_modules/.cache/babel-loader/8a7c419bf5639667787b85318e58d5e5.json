{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { WebChannelConnection } from './webchannel_connection';\n\nvar BrowserPlatform =\n/** @class */\nfunction () {\n  function BrowserPlatform() {\n    this.emptyByteString = '';\n    this.base64Available = typeof atob !== 'undefined';\n  }\n\n  BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\n    return Promise.resolve(new WebChannelConnection(databaseInfo));\n  };\n\n  BrowserPlatform.prototype.newSerializer = function (databaseId) {\n    return new JsonProtoSerializer(databaseId, {\n      useProto3Json: true\n    });\n  };\n\n  BrowserPlatform.prototype.formatJSON = function (value) {\n    return JSON.stringify(value);\n  };\n\n  BrowserPlatform.prototype.atob = function (encoded) {\n    return atob(encoded);\n  };\n\n  BrowserPlatform.prototype.btoa = function (raw) {\n    return btoa(raw);\n  };\n\n  return BrowserPlatform;\n}();\n\nexport { BrowserPlatform };","map":{"version":3,"sources":["../src/platform_browser/browser_platform.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAKH,SAAS,mBAAT,QAAoC,sBAApC;AAEA,SAAS,oBAAT,QAAqC,yBAArC;;AAGA,IAAA,eAAA;AAAA;AAAA,YAAA;AAKE,WAAA,eAAA,GAAA;AAFS,SAAA,eAAA,GAAkB,EAAlB;AAGP,SAAK,eAAL,GAAuB,OAAO,IAAP,KAAgB,WAAvC;AACD;;AAED,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,YAAf,EAAyC;AACvC,WAAO,OAAO,CAAC,OAAR,CAAgB,IAAI,oBAAJ,CAAyB,YAAzB,CAAhB,CAAP;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,UAAd,EAAoC;AAClC,WAAO,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC;AAAE,MAAA,aAAa,EAAE;AAAjB,KAApC,CAAP;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,KAAX,EAAuB;AACrB,WAAO,IAAI,CAAC,SAAL,CAAe,KAAf,CAAP;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,OAAL,EAAoB;AAClB,WAAO,IAAI,CAAC,OAAD,CAAX;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,GAAL,EAAgB;AACd,WAAO,IAAI,CAAC,GAAD,CAAX;AACD,GAFD;;AAGF,SAAA,eAAA;AAAC,CA5BD,EAAA","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { Platform } from '../platform/platform';\nimport { Connection } from '../remote/connection';\nimport { JsonProtoSerializer } from '../remote/serializer';\n\nimport { WebChannelConnection } from './webchannel_connection';\nimport { AnyJs } from '../util/misc';\n\nexport class BrowserPlatform implements Platform {\n  readonly base64Available: boolean;\n\n  readonly emptyByteString = '';\n\n  constructor() {\n    this.base64Available = typeof atob !== 'undefined';\n  }\n\n  loadConnection(databaseInfo: DatabaseInfo): Promise<Connection> {\n    return Promise.resolve(new WebChannelConnection(databaseInfo));\n  }\n\n  newSerializer(databaseId: DatabaseId): JsonProtoSerializer {\n    return new JsonProtoSerializer(databaseId, { useProto3Json: true });\n  }\n\n  formatJSON(value: AnyJs): string {\n    return JSON.stringify(value);\n  }\n\n  atob(encoded: string): string {\n    return atob(encoded);\n  }\n\n  btoa(raw: string): string {\n    return btoa(raw);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}