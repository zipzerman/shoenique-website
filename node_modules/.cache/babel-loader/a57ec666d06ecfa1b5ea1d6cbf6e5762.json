{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = useRef();\n\n  const _useThree = useThree(),\n        scene = _useThree.scene;\n\n  useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };","map":{"version":3,"sources":["C:/Users/junecsnp/Desktop/JuneWeb+Shoe/node_modules/drei/useHelper.js"],"names":["useRef","useEffect","useThree","useFrame","useHelper","object3D","proto","args","helper","scene","current","add","remove","update"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC,GAAGC,IAAvC,EAA6C;AAC3C,QAAMC,MAAM,GAAGR,MAAM,EAArB;;AAD2C,oBAIvCE,QAAQ,EAJ+B;AAAA,QAGzCO,KAHyC,aAGzCA,KAHyC;;AAK3CR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,IAAID,QAAQ,CAACK,OAAtB,EAA+B;AAC7BF,MAAAA,MAAM,CAACE,OAAP,GAAiB,IAAIJ,KAAJ,CAAUD,QAAQ,CAACK,OAAnB,EAA4B,GAAGH,IAA/B,CAAjB;;AAEA,UAAIC,MAAM,CAACE,OAAX,EAAoB;AAClBD,QAAAA,KAAK,CAACE,GAAN,CAAUH,MAAM,CAACE,OAAjB;AACD;AACF;;AAED,WAAO,MAAM;AACX,UAAIF,MAAM,CAACE,OAAX,EAAoB;AAClBD,QAAAA,KAAK,CAACG,MAAN,CAAaJ,MAAM,CAACE,OAApB;AACD;AACF,KAJD;AAKD,GAdQ,EAcN,CAACD,KAAD,EAAQH,KAAR,EAAeD,QAAf,EAAyBE,IAAzB,CAdM,CAAT;AAeAJ,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIK,MAAM,CAACE,OAAX,EAAoB;AAClBF,MAAAA,MAAM,CAACE,OAAP,CAAeG,MAAf;AACD;AACF,GAJO,CAAR;AAKA,SAAOL,MAAP;AACD;;AAED,SAASJ,SAAT","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = useRef();\n  const {\n    scene\n  } = useThree();\n  useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };\n"]},"metadata":{},"sourceType":"module"}