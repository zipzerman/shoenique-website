{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PublicBlob } from '../api/blob';\nimport { Firestore, PublicCollectionReference, PublicDocumentReference, PublicDocumentSnapshot, PublicFirestore, PublicQuery, PublicQuerySnapshot, PublicTransaction, PublicWriteBatch } from '../api/database';\nimport { FieldPath } from '../api/field_path';\nimport { PublicFieldValue } from '../api/field_value';\nimport { GeoPoint } from '../api/geo_point';\nimport { shallowCopy } from '../util/obj';\nvar firestoreNamespace = {\n  Firestore: PublicFirestore,\n  GeoPoint: GeoPoint,\n  Blob: PublicBlob,\n  Transaction: PublicTransaction,\n  WriteBatch: PublicWriteBatch,\n  DocumentReference: PublicDocumentReference,\n  DocumentSnapshot: PublicDocumentSnapshot,\n  Query: PublicQuery,\n  QuerySnapshot: PublicQuerySnapshot,\n  CollectionReference: PublicCollectionReference,\n  FieldPath: FieldPath,\n  FieldValue: PublicFieldValue,\n  setLogLevel: Firestore.setLogLevel\n};\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\n\nexport function configureForFirebase(firebase) {\n  firebase.INTERNAL.registerService('firestore', function (app) {\n    return new Firestore(app);\n  }, shallowCopy(firestoreNamespace));\n}\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\n\nexport function configureForStandalone(exportObject) {\n  var copiedNamespace = shallowCopy(firestoreNamespace); // Unlike the use with Firebase, the standalone allows the use of the\n  // constructor, so export it's internal class\n\n  copiedNamespace['Firestore'] = Firestore;\n  exportObject['firestore'] = copiedNamespace;\n}","map":{"version":3,"sources":["../src/platform/config.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAIH,SAAS,UAAT,QAA2B,aAA3B;AACA,SACE,SADF,EAEE,yBAFF,EAGE,uBAHF,EAIE,sBAJF,EAKE,eALF,EAME,WANF,EAOE,mBAPF,EAQE,iBARF,EASE,gBATF,QAUO,iBAVP;AAWA,SAAS,SAAT,QAA0B,mBAA1B;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,QAAT,QAAyB,kBAAzB;AACA,SAAS,WAAT,QAA4B,aAA5B;AAEA,IAAM,kBAAkB,GAAG;AACzB,EAAA,SAAS,EAAE,eADc;AAEzB,EAAA,QAAQ,EAAE,QAFe;AAGzB,EAAA,IAAI,EAAE,UAHmB;AAIzB,EAAA,WAAW,EAAE,iBAJY;AAKzB,EAAA,UAAU,EAAE,gBALa;AAMzB,EAAA,iBAAiB,EAAE,uBANM;AAOzB,EAAA,gBAAgB,EAAE,sBAPO;AAQzB,EAAA,KAAK,EAAE,WARkB;AASzB,EAAA,aAAa,EAAE,mBATU;AAUzB,EAAA,mBAAmB,EAAE,yBAVI;AAWzB,EAAA,SAAS,EAAE,SAXc;AAYzB,EAAA,UAAU,EAAE,gBAZa;AAazB,EAAA,WAAW,EAAE,SAAS,CAAC;AAbE,CAA3B;AAgBA;;AAEG;;AACH,OAAM,SAAA,oBAAA,CAA+B,QAA/B,EAA0D;AAC9D,EAAA,QAAQ,CAAC,QAAT,CAAkB,eAAlB,CACE,WADF,EAEE,UAAC,GAAD,EAAiB;AAAK,WAAA,IAAI,SAAJ,CAAA,GAAA,CAAA;AAAkB,GAF1C,EAGE,WAAW,CAAC,kBAAD,CAHb;AAKD;AAED;;;;AAIG;;AACH,OAAM,SAAA,sBAAA,CAAiC,YAAjC,EAEL;AACC,MAAM,eAAe,GAAG,WAAW,CAAC,kBAAD,CAAnC,CADD,CAEC;AACA;;AACA,EAAA,eAAe,CAAC,WAAD,CAAf,GAA+B,SAA/B;AACA,EAAA,YAAY,CAAC,WAAD,CAAZ,GAA4B,eAA5B;AACD","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firestore from 'firestore';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app';\nimport { PublicBlob } from '../api/blob';\nimport {\n  Firestore,\n  PublicCollectionReference,\n  PublicDocumentReference,\n  PublicDocumentSnapshot,\n  PublicFirestore,\n  PublicQuery,\n  PublicQuerySnapshot,\n  PublicTransaction,\n  PublicWriteBatch\n} from '../api/database';\nimport { FieldPath } from '../api/field_path';\nimport { PublicFieldValue } from '../api/field_value';\nimport { GeoPoint } from '../api/geo_point';\nimport { shallowCopy } from '../util/obj';\n\nconst firestoreNamespace = {\n  Firestore: PublicFirestore,\n  GeoPoint: GeoPoint,\n  Blob: PublicBlob,\n  Transaction: PublicTransaction,\n  WriteBatch: PublicWriteBatch,\n  DocumentReference: PublicDocumentReference,\n  DocumentSnapshot: PublicDocumentSnapshot,\n  Query: PublicQuery,\n  QuerySnapshot: PublicQuerySnapshot,\n  CollectionReference: PublicCollectionReference,\n  FieldPath: FieldPath,\n  FieldValue: PublicFieldValue,\n  setLogLevel: Firestore.setLogLevel\n};\n\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nexport function configureForFirebase(firebase: FirebaseNamespace): void {\n  firebase.INTERNAL.registerService(\n    'firestore',\n    (app: FirebaseApp) => new Firestore(app),\n    shallowCopy(firestoreNamespace)\n  );\n}\n\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nexport function configureForStandalone(exportObject: {\n  [key: string]: {};\n}): void {\n  const copiedNamespace = shallowCopy(firestoreNamespace);\n  // Unlike the use with Firebase, the standalone allows the use of the\n  // constructor, so export it's internal class\n  copiedNamespace['Firestore'] = Firestore;\n  exportObject['firestore'] = copiedNamespace;\n}\n"]},"metadata":{},"sourceType":"module"}