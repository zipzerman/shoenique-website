{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChangeType } from '../core/view_snapshot';\nimport { documentKeySet } from '../model/collections';\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\n\nvar LocalViewChanges =\n/** @class */\nfunction () {\n  function LocalViewChanges(query, addedKeys, removedKeys) {\n    this.query = query;\n    this.addedKeys = addedKeys;\n    this.removedKeys = removedKeys;\n  }\n\n  LocalViewChanges.fromSnapshot = function (viewSnapshot) {\n    var addedKeys = documentKeySet();\n    var removedKeys = documentKeySet();\n\n    for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\n      var docChange = _a[_i];\n\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n\n        default:\n      }\n    }\n\n    return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n  };\n\n  return LocalViewChanges;\n}();\n\nexport { LocalViewChanges };","map":{"version":3,"sources":["../src/local/local_view_changes.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAGH,SAAS,UAAT,QAAyC,uBAAzC;AACA,SAAS,cAAT,QAA+C,sBAA/C;AAEA;;;;AAIG;;AACH,IAAA,gBAAA;AAAA;AAAA,YAAA;AACE,WAAA,gBAAA,CACW,KADX,EAEW,SAFX,EAGW,WAHX,EAGsC;AAF3B,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACP;;AAEG,EAAA,gBAAA,CAAA,YAAA,GAAP,UAAoB,YAApB,EAA8C;AAC5C,QAAI,SAAS,GAAG,cAAc,EAA9B;AACA,QAAI,WAAW,GAAG,cAAc,EAAhC;;AAEA,SAAwB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,YAAY,CAAC,UAArC,EAAwB,EAAA,GAAA,EAAA,CAAA,MAAxB,EAAwB,EAAA,EAAxB,EAA+C;AAA1C,UAAM,SAAS,GAAA,EAAA,CAAA,EAAA,CAAf;;AACH,cAAQ,SAAS,CAAC,IAAlB;AACE,aAAK,UAAU,CAAC,KAAhB;AACE,UAAA,SAAS,GAAG,SAAS,CAAC,GAAV,CAAc,SAAS,CAAC,GAAV,CAAc,GAA5B,CAAZ;AACA;;AACF,aAAK,UAAU,CAAC,OAAhB;AACE,UAAA,WAAW,GAAG,WAAW,CAAC,GAAZ,CAAgB,SAAS,CAAC,GAAV,CAAc,GAA9B,CAAd;AACA;;AACF;AAPF;AAUD;;AAED,WAAO,IAAI,gBAAJ,CAAqB,YAAY,CAAC,KAAlC,EAAyC,SAAzC,EAAoD,WAApD,CAAP;AACD,GAlBM;;AAmBT,SAAA,gBAAA;AAAC,CA1BD,EAAA","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../core/query';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nexport class LocalViewChanges {\n  constructor(\n    readonly query: Query,\n    readonly addedKeys: DocumentKeySet,\n    readonly removedKeys: DocumentKeySet\n  ) {}\n\n  static fromSnapshot(viewSnapshot: ViewSnapshot): LocalViewChanges {\n    let addedKeys = documentKeySet();\n    let removedKeys = documentKeySet();\n\n    for (const docChange of viewSnapshot.docChanges) {\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}